<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CourseStudyhistoryMapper">

	<resultMap id="CourseStudyhistoryResult" type="CourseStudyhistory">
		<result property="id" column="ID" />
		<result property="userId" column="USER_ID" />
		<result property="courseId" column="COURSE_ID" />
		<result property="kpointId" column="KPOINT_iD" />
		<result property="playercount" column="PLAYERCOUNT" />
		<result property="courseName" column="COURSE_NAME" />
		<result property="kpointName" column="KPOINT_NAME" />
		<result property="databack" column="DATABACK" />
		<result property="updateTime" column="UPDATE_TIME" />
		
		<result property="userShowName" column="userShowName" />
		<result property="userEmail" column="userEmail" />
		<result property="userImg" column="userImg" />
	</resultMap>


	<resultMap type="CourseStudyhistory" id="AllCourseStudyhistoryResult"
		extends="CourseStudyhistoryResult">
		<result property="teacherName" column="name" />
		<result property="logo" column="logo" />
	</resultMap>
	<sql id="edu_course_studyhistory_columns">
		EDU_COURSE_STUDYHISTORY.ID,
		EDU_COURSE_STUDYHISTORY.USER_ID,
		EDU_COURSE_STUDYHISTORY.COURSE_ID,
		EDU_COURSE_STUDYHISTORY.KPOINT_iD,
		EDU_COURSE_STUDYHISTORY.PLAYERCOUNT,
		EDU_COURSE_STUDYHISTORY.COURSE_NAME,
		EDU_COURSE_STUDYHISTORY.KPOINT_NAME,
		EDU_COURSE_STUDYHISTORY.DATABACK,
		EDU_COURSE_STUDYHISTORY.UPDATE_TIME
	</sql>

	<sql id="edu_course_studyhistory_properties">
		#{id},
		#{userId},
		#{courseId},
		#{kpointId},
		#{playercount},
		#{courseName},
		#{kpointName},
		#{databack},
		#{updateTime}
	</sql>

	<insert id="createCourseStudyhistory" parameterType="CourseStudyhistory"
		keyColumn="ID" keyProperty="id" useGeneratedKeys="true">
		insert INTO EDU_COURSE_STUDYHISTORY (
		<include refid="edu_course_studyhistory_columns" />
		) VALUES (
		<include refid="edu_course_studyhistory_properties" />
		)
	</insert>

	<delete id="deleteCourseStudyhistoryById" parameterType="Long">
		delete
		from EDU_COURSE_STUDYHISTORY
		where
		ID = #{value}
	</delete>

	<update id="updateCourseStudyhistory" parameterType="CourseStudyhistory">
		update
		EDU_COURSE_STUDYHISTORY SET
		USER_ID = #{userId},
		COURSE_ID =
		#{courseId},
		KPOINT_iD = #{kpointId},
		PLAYERCOUNT = #{playercount},
		COURSE_NAME =#{courseName},
		KPOINT_NAME =#{kpointName},
		DATABACK =
		#{databack},
		UPDATE_TIME = #{updateTime}
		where
		ID = #{id}
	</update>

	<select id="getCourseStudyhistoryList" resultMap="CourseStudyhistoryResult"
		parameterType="CourseStudyhistory">
		select
		<include refid="edu_course_studyhistory_columns" />,
		EDU_USER.PIC_IMG AS picImg,
		ifnull(EDU_USER.SHOW_NAME,EDU_USER.EMAIL) AS showName
		from EDU_COURSE_STUDYHISTORY
		left join EDU_COURSE_KPOINT on EDU_COURSE_KPOINT.KPOINT_ID = EDU_COURSE_STUDYHISTORY.KPOINT_ID
		left join EDU_USER on EDU_USER.USER_ID = EDU_COURSE_STUDYHISTORY.USER_ID
		<where>
			EDU_COURSE_KPOINT.KPOINT_ID is not null
			and EDU_COURSE_KPOINT.KPOINT_TYPE=1
			<if test="userId!=null and userId>0">
				and EDU_COURSE_STUDYHISTORY.USER_ID = #{userId}
			</if>
			<if test="courseId!=null and courseId>0">
				and EDU_COURSE_STUDYHISTORY.COURSE_ID = #{courseId}
			</if>
			<if test="kpointId!=null and kpointId>0">
				and EDU_COURSE_STUDYHISTORY.KPOINT_iD = #{kpointId}
			</if>
		</where>
		<if test="queryLimit>0">
			ORDER by EDU_COURSE_STUDYHISTORY.UPDATE_TIME DESC
			limit #{queryLimit}
		</if>
	</select>

	<!-- 查看 课程下的学习记录 -->
	<select id="getCourseStudyhistoryListByCouId" resultMap="CourseStudyhistoryResult" parameterType="long">
		select
		distinct(EDU_COURSE_STUDYHISTORY.USER_ID),
		EDU_USER.SHOW_NAME as userShowName,EDU_USER.EMAIL as userEmail,EDU_USER.PIC_IMG as userImg
		from EDU_COURSE_STUDYHISTORY
        left join EDU_USER on EDU_USER.USER_ID = EDU_COURSE_STUDYHISTORY.USER_ID
		where
	    EDU_COURSE_STUDYHISTORY.COURSE_ID = #{value}
	    order by EDU_COURSE_STUDYHISTORY.UPDATE_TIME desc
        limit 8
	</select>
	
	<!-- 查看 课程下的学习记录 总人数-->
	<select id="getCourseStudyhistoryCountByCouId" resultType="int" parameterType="long">
		select
		IFNULL(count(distinct(EDU_COURSE_STUDYHISTORY.USER_ID)),0)
		from EDU_COURSE_STUDYHISTORY
		where
	    EDU_COURSE_STUDYHISTORY.COURSE_ID = #{value}
	</select>
	
</mapper>